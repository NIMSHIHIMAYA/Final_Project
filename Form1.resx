<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEARwBHAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wgARCAIAAgADASIAAhEBAxEB/8QA
        GwABAAMAAwEAAAAAAAAAAAAAAAUGBwIDBAH/xAAaAQEBAQADAQAAAAAAAAAAAAAABgUBAgQD/9oADAMB
        AAIQAxAAAAHVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADp547uNPq+h4r5CVdoeOV8Xnenz/AF8d+vo9sU6d
        rTN5283o1/lktpzvbcXT3Z/sByAAAAAAAAAAAAAAAAAAAAAfKN9/jMUjzt7HD0fEAAAAAD0XegPP9thU
        a8YOx9Hw+wAAAAAAAAAAAAAAAAAAD59ov3+PngCjxA79AAAAAAAAE/AOnfYPtGvM5th8PsAAAAAAAAAA
        AAAAAAAOnniDoHo89JhB6PiAJDjmPnLjKZOjXZb2M72/H18vp44ixvr886g9hitHxZmkI/Wzg54AX+ge
        jz/bWXT3TW6DkAAAAAAAAAAAAAAABTbflGj4egbmSAJDjn1aG7JzbDzegAAADqzzSOr0+fI0hH0eIHPA
        FvuWS6xha/IZ/tAAAAAAAAAAAAAAAAgc8tFXocUPZ5QGm07RcjSDJ0gAAAAAIrM9hzrWzYMa+aA0TO7T
        4/VeBPbQAAAAAAAAAAAAAAAGZxXo89VOh36gX+xeP2S++Hy+oAAAAACuWPxfX5ZWKjAASsV6OnbWRK0Q
        AAAAAAAAAAAAAAAGP/CtmwANg+klSAAAAAAAOPIY8K2bAffg2ESVIAAAAAAAAAAAAAAABjwrZsADYRJU
        gAAAAAAAGPCtmwANhElSAAAAAAAAAAAAAAAAY8K2bAA2ESVIAAAAAAABjwrZsADYRJUgAAAAAAAAAAAA
        AAAGPCtmwANhElSAAAAAAAAY8K2bAA2ESVIAAAAAAAAAAAAAPJzx6KvWo7Zy5SO4NHxB26gAAAAAAAAA
        AAAAc5GLde12tOQSOd7dQeX1Y2oHHIAAAAAAAAAHDMrLSdrKDT8AAAAAAAAAAAAAAAAAAEjp2QXfM99q
        GLqgAAAAAAAAAZlF8+FXOh26gAAAAAAAAAAAAAAAAAJSL59e2vCUogAAAAAAAAAMeFbNgAAAAAAAAAAA
        AAAAAAAAbCJKkAAAAAAAAAAx4Vs2AAAAAAAAAAAAAAAAAAABsIkqQAAAAAAAAADHhWzYAAAAAAAHO6rT
        j6fU7WXoVala9VtTPo42MwAAAAAAADYRJUgAAAAAAAAAGPCtmwAAAAAAANc7ertk6MOOXV29XPGRisnA
        AAAAAAANhElSAAAAAAAAAAY8K2bAAAAAAAAvFpyG64+naRlaKrKVq53AbGYAAAAAAABsIkqQAAAAAAAA
        ADHhWzYAAAAAAAAGwiSpMeFbNgAAAAAAAAbCJKkAAAAAAAAAAx4Vs2AAAAAAAABsIkqTHhWzYAAAAAAA
        AGwiSpAAAAAAAAAAMeFbNgAAAAAAAAbCikvQZmKifAAAAAAAAA2ESVIAAAAAAAAABjwrZsAAAAAAAAAA
        AAAAAAAAADYRJUgAAAAAAAAAGPCtmwAAAAAAAAAAAAAAAAAAANhElSAAAAAAAAAAZDwlIurnQ7dQAAAA
        AAAAAAAAAAAAAHPhKde2miUogAAAAAAAAAKpSdfzHayo4afgAAAAAAAAAAAAAAAAAAXatabme/mMXVAA
        AAAAAAAAeX1OeMvjtfq2zl0lKR2j4uA7dQAAAAAAAAAAAAADnI9e0XI2W0Z3t8/rMbUDjkAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//xAAlEAACAgEEAgMAAwEA
        AAAAAAACAwEEBQASIFATQBEwgBQhMRD/2gAIAQEAAQUC/TZFAQ7KV16bmGzo8haPROaWvnXzoXNHQZC0
        GlZhkaTlK7NCUFHZNaCQtZfTWsdP1KcxM1cvpTQaPX3smCdOabj+5LmJOjkwd1szAxkclLfTx2SleomJ
        jqZmBjJX5sF6mNvzXKJiY6jL3fKXrYi74y6fMW/Cv6K+Me7ScSgdBVQGoiI1MROjqoPTsSgtWMY9P04i
        35l9K5gpU9pObyqVGWiqUVVo+i3RVZ1bqsqlyQ0ktSwWq6TO2P75Y6kVolgKw+pixaGRpFVPlgrH99GZ
        QAvZLncaNabT1gKw+xoC0LtYqr+KGSlwlBD0Wab46fLHVv41f7slW/k1+WGb5KfRZ5ny/jh0ea36GXR4
        bfHAs+H9FlC33uODXtqehnF7qvHFlsvdFYnc/jTHZU9C6O+pxrztf0U/7xGPiPQKPkeMf7+3iKAGzlxH
        Tb9lmpIi9+CkdKv2V6rZcS0JQY+zZeFdVy2y0fSU7bKp1nhYV65lADeslad01GyVVwFBj62dftDqME/c
        HrZJnku9RjWeO76xzuPqAnaX4oEZMqeKAYBYBBrA4uYoCghkC7rCVoFfDN1oJfdKHYrg0d6u6UW9XBpe
        NXdYSzBL4ZuzAr7oSkCp5YCj/lzLAMEUmX58o3AsKvWwrq/FRxtLqAjcXrZJfju9RjV+S762dRuDqMEj
        aHrGMGN6sVV3TUaxWnAMAPr2UBYVcqMqn0lOoy0dZAV1eyQwY2cQJabQsr1IkPvwMlpVCyzVbECOhGAH
        8Gf/xAApEQACAQMDBAEDBQAAAAAAAAABAgMABBESMUAQEyEwYEFDYSAyUXBx/9oACAEDAQE/AflhOKkv
        UXwvmnvJWoux3PQOw2NJeSrUd6jfu8UDnjyzLEMmpZ2l39EU7RbVFMsoyOLNKIlyady51N6kcxnUtQyi
        Vcjhk4qeXutnqqljgVFY/WSlhRdh0aFG3FS2P1jplKnB6wS9ps0DnhXsmlNP89VUscCoIBEPz+qeASj8
        0ylTg9bKTUmk/ThXj6petjF9w+i+i+4Otm+mX/eE5yxPWFdKAeiZdSEdUOGB/o8kAZNTXpPiOi7NueAr
        suxqG9I8SUCCMj2Xs2T2xxLKbB7Z9jnUxPERtLA/FbW1GNb1gbVdWoxrTnDbx0O3nnWt0MaH6XV0MaE+
        P91dOvPj4s66WI4iLqYD2XsOD3BxLKHJ7h9hAIwamsiPMdMjLuOAqM2wqGyJ8yUAAMD4N//EACgRAAEC
        BAUEAwEBAAAAAAAAAAIBAwAEERIFEBMhQDAyQWAxQ2EgcP/aAAgBAgEBPwH2xErskNYcZ7ntASDIeKwj
        YD8JkrYF8pByDJ+KQ7hxhuG8KlNl47EuT60GGJYGU2+eg/LA8m/zD8uTC0Liy7CvlakNti2No9JxsXRt
        KJhhWCtXholdkiWYRkKecyJASpQ9iXhqDfcPuLIH3A7VhnEvDsCSGlRzmWEeCnmFSmy8LDmrzvXxmRIC
        XLEzMk+X5/UtMkwX5AkhpcmeItWHennhSAWMp+54k99SdDDXvqXOfC9lfzhNpaCJm+d7il0GDscEs3Eu
        BU/w9EUlokMYcKbuwICPanAIBLuSH8OFd2oVFFaL1MOYoOqvExFio6qdQBtFB4hjcKj6rOTpXabcXLWs
        SU4V2m5zirXfIa12505JFdqN5SUkV2o56/onfp039WArhQuIZWipdTDn6jpLxMRfoOknURVFapDGIiuz
        sCYl2rwCMR7lh/ERTZqCJSWq+jf/xAAzEAACAAMEBwYGAwEAAAAAAAABAgADESEiQVASIDEyQFFxBBMw
        QlJiI2FygJGhEILh8f/aAAgBAQAGPwL7m6sQB84ukuflHw0VetsWzSOlkXpjnqf5uzHHQxZNJ62x8SWr
        dLIvEofdFVII+WZ6UxgoinZ1/s0VmOWPz8Ostyp+UU7Qv9ljSlsGGYFJNHmfoRpTWLHx9KUxUwEm3Jn6
        OWkk0Agy5FiYnnwYl9oNUwblFRaMqJNgEaEuyUP3wuhMtlH9RUWg5T3Mo3BtPPhxJmm4dh5ZR3SH4j/o
        eDUju190fELOfxF2Un4iwRaIvSk/EfDLIfzFQO8X2+D3bn4ifsZM0x9iw0x9p16ILuLRYNJ/UfBqRov6
        hFHFmDc9dZibRCumxslWQvVtepslDaYCoKKPDKOKqYqLZR2HXaQ3VckLNsFsPMO1jrBBu4mAiCijxSji
        qmCh2YHnrJMHlMBhsNuRkDa5prgHfNreOQN9bV1wDtQ0yNE9IrrAndS9wJI3Xva0xPUK5HN601i+LngQ
        +KHWldaZHMPNjrSl9o4GavtOtLPJhlIHAkffKWYgAYmKdnXS+Z2RbNI+myLSTx9hIiyaT9VsU7Quj7hs
        gMpBBxHFacz/ALFXsXBcluWrisB5Z/ziCzGgEaR3fKMn0huneEBlNQeHWSPNacpaS3ltHDzTyNMplHma
        cOTzOUg8vspCqKkwG7Reb04RcRV6CL6K3UQW7Pdb04QVYUIzvv2F5t3pq9+ovLvdM7RBgKarocRTO0cY
        iuq7nAVzvuGN5d3pq9wpvNvdM7DKaEQF7Rdb1YfyV7Peb1YQWY1J+30WjvMRBtHeYD7KyOWUgc+Hmjma
        5TKHI14dZy+Ww5S05vNYOHKsKgxondO6cn0Ru+YwFUUA4gpMH+RftXBsloli4tGhL/PPiirAEHAxXs7a
        PtOyLZRP02xaCOPugmLJRH1WRXtDaXtGyAqgADAfYb//xAArEAABAgMGBgMBAQEAAAAAAAABABEhMUEg
        QFBRYXEwgZGh0fCAsfHhEMH/2gAIAQEAAT8h+TZ6O6kwT8NDYdVJf5i+ob9F3BEokZklAhIkLuiIX1Df
        smcCs4ibhoZDqhc9yJOMTNM+Sil2w9GC3zolw946JosHw9HCFzjUYhqIB9HR9rTTjiWlFd1ATQPo2GjL
        AOSaJ2Jl1fEXMuQl1P5QmUEDgiuFHLADkmiNjEr9m6iRiV+0JnADgiuEukRwq/F3myUavxhFHREjgAiW
        CagsybomU6iLOylf1aSpIDYKSB3Cnf1aCnU7iZ3T0FmTdFKfAp+IE4MHEYTlEcjvtpbhVBMkEKHOZ3LL
        gjj1Tc81HqORK2M5FffREScTjBXiEB/IW4pzNzQIeeUA4Yqc4CoqTdjQ24wQP9hghDGGSOiqgja05AAj
        lBDdAsAOKE0CxCjAnHKWp4Lm6M64wB0wNxUByzNoRLBCCq5rlxwhFY1y5qVp5URyzGBteYdUfy0wN4re
        nulxaS0FvX3W09Jh1Q/cDdeXZDWn4EzyEPNxb0f8Jh4tOvPuhsD1XHe1p09u1x1aa3a1quO+Bk5HO1oI
        GuOoAa0TAcj8358NiMEeL3t9CIlqy8COOc1L380+2FkZDVl5EeDzu9Clw2I4N6OjQoBMsgnAMyJDBXQT
        syRUNJUVLI3hiw3JRS8BhkjBxl4ws0Jiw3BFbu++PR090wl1Uejr7rd42QY8oYTGyDnnC7unMhwll6gf
        hSakUwAqtlGGDym8I2E3hG4t1GGLwjQimINMbyWjRZZLRqxsOUB2Q5QPjYcoDshyAfG2a0arLNKNGNjQ
        inBFFsAgReP93AQIPKNCKck1+PsLYAxzF1H2IMMxf4VuvURhLL1AXeFkGPOOEwsg55Ru5QqPR091wk4d
        Ho6+6Xdiw2IzRS8Y2aMHCXgMckJi02AvEPJQ1LMJkA7IkcFZgzMkEPChUplmb1OhsBwUeLzu9SMlqz8C
        ONvga/nm2QOjMKz8iPB52epS4bAYD4G//9oADAMBAAIAAwAAABDzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
        zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzm
        3w/88xr/AM888888888888888888888xP+++++++fx88888888888888888888pc+++++++++8V88888
        88888888888885X++91PPfd1++7/APPPPPPPPPPPPPPPPPPfvvR/PPPPL9fvuvPPPPPPPPPPPPPPPPPP
        vrfPPPPPPGfvqPPPPPPPPPPPPPPPPPF/vl/PPPPPPP8A76vzzzzzzzzzzzzzzzzz775zzzzzzzzz777z
        zzzzzzzzzzzzzzzz777zzzzzzzzz777zzzzzzzzzzzzzzzzz777zzzzzzzzz777zzzzzzzzzzzzzzzzz
        777zzzzzzzzz777zzzzzzzzzzzzzz79z777777777777774y3bzzzzzzzzzzz/777777777777777777
        6nzzzzzzzzzzxz7777777777777777776jzzzzzzzzzzz777777777777777777777zzzzzzzzzzz777
        777777777777777777zzzzzzzzzzz777777775063777777777zzzzzzzzzzz777777775byr7777777
        77zzzzzzzzzzz777777777HyH777777777zzzzzzzzzzz7777777777z7777777777zzzzzzzzzzz777
        7777777z7777777777zzzzzzzzzzz7777777777z7777777777zzzzzzzzzzz7777777777777777777
        77zzzzzzzzzzz777777777777777777777zzzzzzzzzzxT7777777777777777776jzzzzzzzzzzzX77
        77777777777777777/zzzzzzzzzzy7XD777777777777777D/wC88888888888888888888888888888
        8888888888888888888888888888888888888888/8QAKREBAAEDAgUDBQEBAAAAAAAAAREAMUEhQBAw
        UXHhYGGBobHB0fAgcP/aAAgBAwEBPxD1YAlYK0xl9KsDB7Vfx+amr+HzVwZPetMMvpQCS23ztwdaf16d
        Mch/XJ0rM3J02ufWDrT9JXlHUhrLrJ02YBWxTvjjtxAHK0MSfB+6teVBarXtDEnw/ukBwnFzxb9qASW2
        UYb/AGcQBytR+6u/2P8AXT4s/wBikBwnGevfZspAwacSh7B+eQUHYfxxgDGjZe/i8fZ85Hu+cfbxNqac
        h19ZOkgKXsHXPimJZ2CEsUvcOufNGkkeY2ML9/G0bCNu/nmKjl2iA4fSsGErYrS0aVJhCXN9GGHCMsN9
        BpCWeEmkrd/5qwiOHaIDl5jYRv387RozQt38cx0EjS1w6Z80hDGwQhml7B0z4o0EB6G//8QAKREBAAAE
        AgoDAQEAAAAAAAAAAQARIUExQBAwUWFxkbHB0eFggaHwIP/aAAgBAgEBPxD5YjkTYrxLzYxiZv8AGEYZ
        nAIkRhm8QjCJm7xhFaJeTCKRJy8qlLtiKOz2nH1qKey2jH3EilLNnKjcC7sINHINU4OYwlwLO0yaIxGC
        d6rx9aXjSCHVD7ex55QvUfvthE3GF5qfdOWEPMD7O545QcaY6Xdqpx9wicQyU9wOt0vVkETw0GB/X/1t
        wsTub4MrMdMlwOsyU0Xq8fml1E3vY78tQ81N53O/PTNF6vP5kt2YH5pZ66+vzUMZZOV/zTvzE/Mqs66g
        ZV+ZGDmsElZ2WPPSB5AcDIDyB4kEtJ2WfHSHByTWDKauG499MoMpqY7z101hGWAyhuXE+KzhJBi3WLhW
        JIkxwbzz1RdooLs9OAmOJeeiQBIMC8/j94VS/t2/4sRlwcoTlhdYM5qYbz10ygzmrjuPfTWGHkkElJ22
        fHSB5g8HIHzA4sEtZ22PPSEDzX4N/8QAKxABAAECBAUDBQEBAQAAAAAAAREhMQBBYYFQUXGRoSBAsTCA
        0eHw8cEQ/9oACAEBAAE/EPubvU8OG7hQZ0i86oO04QRRZb/yPGEGE5CDcDhVW3+RcN98Zx4vGMIi2fyD
        hAhOQk3C4WAV1f8AseMIrOkXHRJ3jFnliJ0TiZgnm3eQXXQwsfail65O/bHJKVQ6Cxt9PnVKgdRZ3wNP
        sRQ9fw9sZjHmYeSXHR4g8AUksvql2h3ywsAWVQcgsGh9c0BvKg5CydcNgdBJD6Ldo9+GsSovAC6uEK7Q
        06X+j49nQGBFdJ5+RrbBrzJyBsjwpiZFoAXVxSQMLLPByN2tvadaWRbk05m5qasi0gbI8JWzsRZy6Hu7
        e3eyKZdydXh6vCEGAmRW0vVqG+n0AgCqwBngx81rCNL+8YHzDHYSrzgQFTN3BrgOC+QGC4P5A4ERVydw
        IcD5Dg8GrzggU1roNb+04RSBEoj9BnmAkVtD1KDs8GkILznkGqwb4mILRkMhoEG3rQyrFL+d0MDngoZl
        osOldX6JeWKDEtFt1dTFU5538To+uNhTpoM1okmI1i845jqMm3BUo6EWbmbS7nrttMN383NywL/YHQ/L
        r9MhfwL+h1xYEByr+bXP1oUaMznleHZ4Jo3BIEri9CY8mRsQbepYaJz+1sfrHI4oY/Ov1ZbrF/UdcSBW
        3/lLPqkpixGzM3JN8azYSRI8DWBDMX/QI39QQBVYAzwaghz0rdAU6y5/XJeyZ7m2KdY5YRSIiUR9Tzo5
        m/6DG3A6xiUav4Hf1BDCqWZU96+xBBqo2E0967PVSUCDV/C7cDq/IY0i+Q+oayIO2O/l7EacJXfefD1V
        Voy1m+ScDVll76n1GMQo6gXyvsRWJUDRI8h6nNYe3l4HN2ZfUBliGx7EGrN3Hqi7IfvfKkUgAariAQ0r
        7FzvGJkPnRNLF3XDBeuuvPvziszf4YgQ+dF0uTZMSCWlTcuNpwVIpABonuodZp0wDDySJf8A7ur44KWa
        iX/5up5xJidH6gOfuBLKvsASuHElWNPzt39HB1UhCO/1Ln7wIYW3BJH26wtbXK0bovCTzzfXO0bKPtzz
        p6fMrcXfhL0l1+Z26O3t2SShecs8JSjEXZn7KTE+HlThy5ayjRUqvHXAIhyL4YRMORfLDlw1rtEWq8dM
        OZ8PCjLjbgjPIWmFNVnY19JghFAXqC6jGzpxs2INnQD0mxLs6icbdiTe4PpciFewvG3BiaRvVQ1GdnT0
        mjMUDaqDqsbGvGzM+XhRngm46V2qhVeOn/pNz0ptUGq8dcOZ8vKnN+32g9oQguhmN6YrvfJJLKZBev2V
        pRirsxwlKsRd2PbvST9cyt1NuEvWx9MztwN/bznbaZ2rZU4ShK33lat0D24Syr7BITBqSjDb6ln98HMS
        FIf2tj9OBaCnsAQHuJETqfQJzw2aiD/5uj54KQSiD/7uh4xGpFesCe6OkUAA1HEglrU2LjecQIfKi63J
        uGJg/k/y9/ND8n+GAUnyomti7GIBLWruXO0YKkUAA0D7Df/Z
</value>
  </data>
</root>